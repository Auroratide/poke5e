const l=["normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy"],u=r=>Object.entries(r).reduce((e,[t,s])=>({...e,[t]:l.reduce((i,a)=>({...i,[a]:s[a]??1}),{})}),{}),g=u({normal:{fighting:2,ghost:0},fighting:{fairy:2,flying:2,psychic:2,bug:.5,rock:.5,dark:.5},flying:{electric:2,ice:2,rock:2,bug:.5,fighting:.5,grass:.5,ground:0},poison:{ground:2,psychic:2,fighting:.5,poison:.5,bug:.5,grass:.5,fairy:.5},ground:{grass:2,ice:2,water:2,poison:.5,rock:.5,electric:0},rock:{fighting:2,grass:2,ground:2,steel:2,water:2,fire:.5,flying:.5,normal:.5,poison:.5},bug:{fire:2,flying:2,rock:2,fighting:.5,grass:.5,ground:.5},ghost:{ghost:2,dark:2,bug:.5,poison:.5,normal:0,fighting:0},steel:{fire:2,fighting:2,ground:2,bug:.5,dragon:.5,fairy:.5,flying:.5,grass:.5,ice:.5,normal:.5,psychic:.5,rock:.5,steel:.5,poison:0},fire:{ground:2,rock:2,water:2,bug:.5,fairy:.5,fire:.5,grass:.5,ice:.5,steel:.5},water:{electric:2,grass:2,fire:.5,ice:.5,steel:.5,water:.5},grass:{bug:2,fire:2,flying:2,ice:2,poison:2,electric:.5,grass:.5,ground:.5,water:.5},electric:{ground:2,electric:.5,flying:.5,steel:.5},psychic:{bug:2,ghost:2,dark:2,fighting:.5,psychic:.5},ice:{fighting:2,fire:2,rock:2,steel:2,ice:.5},dragon:{dragon:2,fairy:2,ice:2,electric:.5,fire:.5,grass:.5,water:.5},dark:{bug:2,fairy:2,fighting:2,dark:.5,ghost:.5,psychic:0},fairy:{poison:2,steel:2,bug:.5,dark:.5,fighting:.5,dragon:0}}),o=(r,e)=>Object.entries(r).reduce((t,[s,i])=>({...t,[s]:i*e[s]}),{}),n=r=>{if(r.some(e=>!l.includes(e)))throw new Error(`Invalid Pokemon type: [${r.join(", ")}]`);return r.map(e=>g[e]).reduce(o)},c=r=>new Set(Object.entries(n(r)).filter(([,e])=>e>1).map(([e])=>e)),b=r=>new Set(Object.entries(n(r)).filter(([,e])=>0<e&&e<1).map(([e])=>e)),v=r=>new Set(Object.entries(n(r)).filter(([,e])=>e===0).map(([e])=>e)),f=r=>new Set(Object.entries(n(r)).filter(([,e])=>e===1).map(([e])=>e));export{v as i,f as n,b as r,c as v};
