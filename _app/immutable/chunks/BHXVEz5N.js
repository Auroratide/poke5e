var d=Object.defineProperty;var o=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var a=(s,e,t)=>o(s,typeof e!="symbol"?e+"":e,t);import{d as r}from"./CdRAs_Ty.js";import{D as u}from"./Bf-g66YD.js";const b=s=>e=>s.filter(t=>!e.includes(t)),f=s=>e=>s.every(t=>e.includes(t))&&e.every(t=>s.includes(t)),n=(s,e)=>s.localeCompare(e),h=["normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy"],i=class i extends u{constructor(){super(...arguments);a(this,"vulnerabilities",()=>Object.entries(r(this.data)).filter(([,t])=>t>1).map(([t])=>t).sort(n));a(this,"resistances",()=>Object.entries(r(this.data)).filter(([,t])=>0<t&&t<1).map(([t])=>t).sort(n));a(this,"immunities",()=>Object.entries(r(this.data)).filter(([,t])=>t===0).map(([t])=>t).sort(n));a(this,"normalDamange",()=>Object.entries(r(this.data)).filter(([,t])=>t===1).map(([t])=>t).sort(n));a(this,"equivalent",t=>f(this.data)(t.data))}get primary(){return this.data[0]}get secondary(){return this.data[1]}includes(...t){return t.some(l=>this.data.includes(l))}};a(i,"list",h),a(i,"isPokeType",t=>i.list.includes(t));let c=i;export{c as P,b as d,f as e};
