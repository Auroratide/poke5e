var c=Object.defineProperty;var d=(i,t,e)=>t in i?c(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var s=(i,t,e)=>d(i,typeof t!="symbol"?t+"":t,e);import{d as r}from"./CdRAs_Ty.js";import{D as l}from"./Bf-g66YD.js";const m=i=>t=>i.filter(e=>!t.includes(e)),f=i=>t=>i.every(e=>t.includes(e))&&t.every(e=>i.includes(e)),o=["normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy"],a=class a extends l{constructor(){super(...arguments);s(this,"vulnerabilities",()=>new Set(Object.entries(r(this.data)).filter(([,e])=>e>1).map(([e])=>e)));s(this,"resistances",()=>new Set(Object.entries(r(this.data)).filter(([,e])=>0<e&&e<1).map(([e])=>e)));s(this,"immunities",()=>new Set(Object.entries(r(this.data)).filter(([,e])=>e===0).map(([e])=>e)));s(this,"normalDamange",()=>new Set(Object.entries(r(this.data)).filter(([,e])=>e===1).map(([e])=>e)));s(this,"equivalent",e=>f(this.data)(e.data))}get primary(){return this.data[0]}get secondary(){return this.data[1]}};s(a,"list",o),s(a,"isPokeType",e=>a.list.includes(e));let n=a;export{n as P,m as d};
